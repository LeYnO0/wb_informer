import asyncio
import requests

from datetime import datetime
from sqlalchemy import select
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from config import GETITEM_URL
from database import async_session
from models import RequestInfo
import app.keyboards as keyboards

router = Router()

# –°–æ–∑–¥–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏—è


class GetArticle(StatesGroup):
    article = State()


# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º reply-–∫–∞–ª–≤–∏–∞—Ç—É—Ä—É
@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}. –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º Wildberries üçí', reply_markup=keyboards.main)


# –ü–æ–ª—É—á–∞–µ–º –∏ —Ä–∞–±–æ—Ç–∞–µ–º —Å –∞—Ä—Ç–∏–∫—É–ª–æ–º —Ç–æ–≤–∞—Ä–∞
@router.message(F.text == '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–æ–≤–∞—Ä—É ‚ÑπÔ∏è')
async def cmd_get_wb_data(message: Message, state: FSMContext):
    await state.set_state(GetArticle.article) # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –æ–∂–∏–¥–∞–Ω–∏–µ –∞—Ä—Ç–∏–∫—É–ª–∞
    await message.answer(f'–í–≤–µ–¥–∏—Ç–µ –∞—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞:') # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª


@router.message(GetArticle.article)
async def get_article(message: Message, state: FSMContext):
    await state.update_data(article=message.text) # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã
    data = RequestInfo(date_time=str(datetime.now())[:-4], # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –ë–î
                       article=int(message.text),
                       telegram_id=int(message.from_user.id),)
    async with async_session() as session: # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é –∏ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–µ—ë –¥–∞–Ω–Ω—ã–µ
        session.add(data)
        await session.commit() # –ü–æ—Å–ª–µ –∫–æ–º–∏—Ç–∞ –¥–∞–Ω–Ω—ã–µ (–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –∑–∞–ø—Ä–æ—Å–µ) –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤ –ë–î

    url = f'{GETITEM_URL}{message.text}' # –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API WB
    response_data = requests.get(url).json() # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–ª–∞—Å—Å –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ requests –∫ json

    name = response_data['data']['products'][0]['name'] # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ json –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –∏–º–µ–Ω–∞–º–∏
    article = message.text
    price = response_data['data']['products'][0]['salePriceU'] / 100
    raiting = response_data['data']['products'][0]['reviewRating']

    quantity = 0

    for i in range(len(response_data['data']['products'][0]['sizes'][0]['stocks'])): # –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ –≤—Å–µ—Ö —Å–∫–ª–∞–¥–∞—Ö –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è
        quantity += response_data['data']['products'][0]['sizes'][0]['stocks'][i]['qty'] # —Ü–∏–∫–ª–æ–º –ø–æ –≤—Å–µ–º —Å–∫–ª–∞–¥–∞–º –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é

    await message.answer(f'–ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n' # –§–æ—Ä–º–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                         f'–ê—Ä—Ç–∏–∫—É–ª: {article}\n'
                         f'–¶–µ–Ω–∞: {price}\n'
                         f'–†–µ–π—Ç–∏–Ω–≥: {raiting}\n'
                         f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}',
                         reply_markup=keyboards.subscribe,)

    await state.clear() # –û—á–∏—â–∞–µ–º –º–∞—à–∏–Ω—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã


# –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ë–î
@router.message(F.text == '–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ë–î üìÅ')
async def cmd_get_db_data(message: Message):
    await message.answer(f'–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:')
    async with async_session() as session:
        stmt = select(RequestInfo).order_by(RequestInfo.id.desc()).limit(5) # –í—ã–±–∏—Ä–∞–µ–º –∏–∑ –ë–î –ø–æ —Å—Ç–æ–ª–±—Ü—É id –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã desc()
        data = await session.execute(stmt)
        result = data.scalars().all() # –ò–∑ –º–æ–¥–µ–ª–µ–π —Å—Ç—Ä–æ–∫ –ë–î —Å–æ–±–∏—Ä–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏
        for index, recording in enumerate(result): # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö –≤ —Ü–∏–∫–ª–µ. enumerate —Å–ª—É–∂–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è —É–¥–æ–±–Ω–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–∏
            await message.answer(f'–ó–∞–ø–∏—Å—å ‚Ññ: {index + 1}\n\n'
                                 f'–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: {recording.date_time}\n'
                                 f'–ê—Ä—Ç–∏–∫—É–ª: {recording.article}\n'
                                 f'user_id: {recording.telegram_id}\n')


# –°–æ–∑–¥–∞—ë–º –∫–æ–ª–ª–±—ç–∫ –¥–ª—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
@router.callback_query(F.data == 'subscribe')
async def subscribe(callback: CallbackQuery, state: FSMContext):
    await callback.answer(f'–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ ‚úÖ')
    index_ = callback.message.text.split().index('–ê—Ä—Ç–∏–∫—É–ª:') + 1 # –ò–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–¥ –∫–Ω–æ–ø–∫–æ–π –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∞—Ä—Ç–∏–∫—É–ª —á—Ç–æ–±—ã
    article = callback.message.text.split()[index_] # –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é

    await state.update_data({"parsing_continue": True}) # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å—Å—è
    while (await state.get_data()).get("parsing_continue"): # –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–ø–∏—Å–∫–∏

        url = f'{GETITEM_URL}{article}' # –°–Ω–æ–≤–∞ –ø–∞—Ä—Å–∏–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ API –∫–∞–∫ –∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É –∞—Ä—Ç–∏–∫—É–ª–∞, —Ç–æ–ª—å–∫–æ
        response_data = requests.get(url).json() # –¥–µ–ª–∞–µ–º —ç—Ç–æ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –∫–∞–∂–¥—ã–µ 300 —Å–µ–∫—É–Ω–¥
        name = response_data['data']['products'][0]['name']
        article = article
        price = response_data['data']['products'][0]['salePriceU'] / 100
        raiting = response_data['data']['products'][0]['reviewRating']

        quantity = 0

        for i in range(len(response_data['data']['products'][0]['sizes'][0]['stocks'])):
            quantity += response_data['data']['products'][0]['sizes'][0]['stocks'][i]['qty']

        await callback.message.answer(f'–ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n'
                                      f'–ê—Ä—Ç–∏–∫—É–ª: {article}\n'
                                      f'–¶–µ–Ω–∞: {price}\n'
                                      f'–†–µ–π—Ç–∏–Ω–≥: {raiting}\n'
                                      f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}',)

        await asyncio.sleep(300) # –í—Ä–µ–º—è —Å–Ω–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö


# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –º–µ–Ω—è—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ parsing_continue –Ω–∞ False
@router.message(F.text == '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üö´')
async def cmd_stop_notification(message: Message, state: FSMContext):
    await message.answer(f'–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã ')
    await state.update_data({"parsing_continue": False}) # –ú–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ. –¶–∏–∫–ª –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è
